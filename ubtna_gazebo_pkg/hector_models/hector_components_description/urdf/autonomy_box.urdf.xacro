<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="argo_tracker_structure_addons">
  
  <xacro:include filename="$(find hector_xacro_tools)/urdf/inertia_tensors.urdf.xacro"/>
  <xacro:include filename="$(find hector_sensors_description)/urdf/generic_camera.urdf.xacro" />
  <xacro:include filename="$(find hector_components_description)/urdf/vlp16_mount.urdf.xacro.xml"/>
  <xacro:include filename="$(find hector_sensors_description)/urdf/camera360.urdf.xacro"/>
  <xacro:include filename="$(find hector_sensors_description)/urdf/realsense_t265.urdf.xacro"/>
  
  
<!--  <xacro:arg name="add_self_filter_geom" default="0"/>-->
  <!--<xacro:property name="add_self_filter_geom" value="${arg add_self_filter_geom}"/>-->
  
  <xacro:property name="alu_profile_side_length" value="0.02"/>
  <xacro:property name="computer_box_height" value="0.119"/>
  <xacro:property name="computer_box_width" value="0.19"/>
  <xacro:property name="computer_box_length" value="0.19"/>
  <xacro:property name="top_protection_bottom" value="${computer_box_height + 0.32}"/>
  
  <xacro:property name="insta360_mounting_height" value="${top_protection_bottom + alu_profile_side_length + 0.12}"/>
  <xacro:property name="insta360_radius" value="0.011"/>
  <xacro:property name="insta360_collision_radius" value="0.04"/>
  
  <xacro:property name="M_PI" value="3.14159265359"/>
  
  <xacro:macro name="autonomy_box_macro" params="parent *origin alu_profile_collision_size_factor name:='autonomy_box' imu_link='imu_link' add_chilitags:='true'">
    
    <xacro:arg name="add_containment_self_filter_geom" default="false"/>
    <xacro:arg name="add_manipulation_geom" default="false"/>
    
    <xacro:if value="${add_chilitags}">
      <xacro:include filename="$(find hector_chilitag_description)/urdf/chilitag.urdf.xacro"/>
      
      <xacro:property name="chilitag_white_border" value="0.005"/>
      <xacro:property name="chilitag_thickness" value="0.003"/>
      <xacro:property name="chilitag_29_x" value="${-computer_box_width/2 + chilitag_white_border + chilitag_size/2}"/> <!-- border is bigger on this side -->
      <xacro:property name="chilitag_29_y" value="${-computer_box_width/2 + 2*chilitag_white_border + chilitag_size/2}"/>
      <xacro:property name="chilitag_29_z" value="${top_protection_bottom + alu_profile_side_length + chilitag_thickness}"/>
    </xacro:if>
        
    <joint name="${name}_joint" type="fixed">
      <xacro:insert_block name="origin"/>
      <parent link="${parent}" />
      <child link="${name}_link"/>      
    </joint>
    
    <!-- Computer box and cage -->
    <link name="${name}_link">
      <xacro:inertial_sphere mass="0.1" diameter="0.07"/>
      
      <!-- Computer box-->
      <visual>
        <origin xyz="0 0 ${computer_box_height/2}" rpy="0 0 0"/>
        <geometry>
          <box size="${computer_box_length} ${computer_box_width} ${computer_box_height}"/>
        </geometry>
        <material name="Grey">
          <color rgba="0.5 0.5 0.5 1"/>
        </material> 
      </visual>

      <!--Protection vertical profiles-->
      <visual>
        <origin xyz="${ (computer_box_length/2-alu_profile_side_length/2)} ${ (computer_box_width/2-alu_profile_side_length/2)} ${computer_box_height/2 + top_protection_bottom/2}" rpy="0 0 0"/>
        <geometry>
          <box size="${alu_profile_side_length} ${alu_profile_side_length} ${top_protection_bottom-computer_box_height}"/>
        </geometry>
        <material name="Grey">
          <color rgba="0.5 0.5 0.5 1"/>
        </material>  
      </visual>

      <visual>
        <origin xyz="${-(computer_box_length/2-alu_profile_side_length/2)} ${ (computer_box_width/2-alu_profile_side_length/2)} ${computer_box_height/2 + top_protection_bottom/2}" rpy="0 0 0"/>
        <geometry>
          <box size="${alu_profile_side_length} ${alu_profile_side_length} ${top_protection_bottom-computer_box_height}"/>
        </geometry>
        <material name="Grey">
          <color rgba="0.5 0.5 0.5 1"/>
        </material>  
      </visual>
      
      <visual>
        <origin xyz="${-(computer_box_length/2-alu_profile_side_length/2)} ${-(computer_box_width/2-alu_profile_side_length/2)} ${computer_box_height/2 + top_protection_bottom/2}" rpy="0 0 0"/>
        <geometry>
          <box size="${alu_profile_side_length} ${alu_profile_side_length} ${top_protection_bottom-computer_box_height}"/>
        </geometry>
        <material name="Grey">
          <color rgba="0.5 0.5 0.5 1"/>
        </material> 
      </visual>
      
      <visual>
        <origin xyz="${ (computer_box_length/2-alu_profile_side_length/2)} ${-(computer_box_width/2-alu_profile_side_length/2)} ${computer_box_height/2 + top_protection_bottom/2}" rpy="0 0 0"/>
        <geometry>
          <box size="${alu_profile_side_length} ${alu_profile_side_length} ${top_protection_bottom-computer_box_height}"/>
        </geometry>
        <material name="Grey">
          <color rgba="0.5 0.5 0.5 1"/>
        </material> 
      </visual>
      
      <!--Top geom-->      
      <visual>
        <origin xyz="0 ${ (computer_box_width/2-alu_profile_side_length/2)} ${top_protection_bottom + alu_profile_side_length/2}" rpy="0 0 0"/>
        <geometry>
          <box size="${computer_box_length} ${alu_profile_side_length} ${alu_profile_side_length}"/>
        </geometry>
        <material name="Grey">
          <color rgba="0.5 0.5 0.5 1"/>
        </material> 
      </visual>
      
      <visual>
        <origin xyz="0 ${-(computer_box_width/2-alu_profile_side_length/2)} ${top_protection_bottom + alu_profile_side_length/2}" rpy="0 0 0"/>
        <geometry>
          <box size="${computer_box_length} ${alu_profile_side_length} ${alu_profile_side_length}"/>
        </geometry>
        <material name="Grey">
          <color rgba="0.5 0.5 0.5 1"/>
        </material> 
      </visual>

      <visual>
        <origin xyz="${ (computer_box_length/2-alu_profile_side_length/2)} 0 ${top_protection_bottom + alu_profile_side_length/2}" rpy="0 0 0"/>
        <geometry>
          <box size="${alu_profile_side_length} ${computer_box_width}  ${alu_profile_side_length}"/>
        </geometry>
        <material name="Grey">
          <color rgba="0.5 0.5 0.5 1"/>
        </material> 
      </visual>
      
      <visual>
        <origin xyz="${-(computer_box_length/2-alu_profile_side_length/2)} 0 ${top_protection_bottom + alu_profile_side_length/2}" rpy="0 0 0"/>
        <geometry>
          <box size="${alu_profile_side_length} ${computer_box_width}  ${alu_profile_side_length}"/>
        </geometry>
        <material name="Grey">
          <color rgba="0.5 0.5 0.5 1"/>
        </material> 
      </visual>      
      
      <!-- 360 cam mount -->
      <visual>
        <origin xyz="0 0 ${0.5 * (top_protection_bottom + alu_profile_side_length + insta360_mounting_height - insta360_radius)}" rpy="0 0 0"/>
        <geometry>
          <box size="${alu_profile_side_length} ${alu_profile_side_length} ${insta360_mounting_height - top_protection_bottom - alu_profile_side_length - insta360_radius}"/>
        </geometry>
        <material name="Grey">
          <color rgba="0.5 0.5 0.5 1"/>
        </material>  
      </visual>
      
      <!-- Chilitags visual -->
      <xacro:if value="${add_chilitags}">
        <xacro:chilitag_visual_sized name="chilitag29" size="${chilitag_size}">
  <!--        <origin xyz="${chilitag_28_x} ${chilitag_28_y} ${chilitag_28_z}" rpy="0 ${-M_PI/2} 0"/>-->
          <origin xyz="${chilitag_29_x} ${chilitag_29_y} ${chilitag_29_z}" rpy="${M_PI} ${0} ${-M_PI/2}"/>
        </xacro:chilitag_visual_sized>
      </xacro:if>
      
      <!-- Computer box-->
      <xacro:unless value="$(arg add_containment_self_filter_geom)">
      <collision>
        <origin xyz="0 0 ${computer_box_height/2}" rpy="0 0 0"/>
        <geometry>
          <box size="${computer_box_length} ${computer_box_width} ${computer_box_height}"/>
        </geometry>
        <material name="Grey">
          <color rgba="0.5 0.5 0.5 1"/>
        </material> 
      </collision>

      <!--Protection vertical profiles-->
      <collision>
        <origin xyz="${ (computer_box_length/2-alu_profile_side_length/2)} ${ (computer_box_width/2-alu_profile_side_length/2)} ${computer_box_height/2 + top_protection_bottom/2}" rpy="0 0 0"/>
        <geometry>
          <!--<box size="${alu_profile_side_length} ${alu_profile_side_length} ${top_protection_bottom-computer_box_height}"/>-->
          <cylinder length="${top_protection_bottom-computer_box_height}" radius="${alu_profile_side_length*0.5*alu_profile_collision_size_factor}"/>
        </geometry>
        <material name="Grey">
          <color rgba="0.5 0.5 0.5 1"/>
        </material>  
      </collision>

      <collision>
        <origin xyz="${-(computer_box_length/2-alu_profile_side_length/2)} ${ (computer_box_width/2-alu_profile_side_length/2)} ${computer_box_height/2 + top_protection_bottom/2}" rpy="0 0 0"/>
        <geometry>
          <!--<box size="${alu_profile_side_length} ${alu_profile_side_length} ${top_protection_bottom-computer_box_height}"/>-->
          <cylinder length="${top_protection_bottom-computer_box_height}" radius="${alu_profile_side_length*0.5*alu_profile_collision_size_factor}"/>
        </geometry>
        <material name="Grey">
          <color rgba="0.5 0.5 0.5 1"/>
        </material>  
      </collision>
      
      <collision>
        <origin xyz="${-(computer_box_length/2-alu_profile_side_length/2)} ${-(computer_box_width/2-alu_profile_side_length/2)} ${computer_box_height/2 + top_protection_bottom/2}" rpy="0 0 0"/>
        <geometry>
          <!--<box size="${alu_profile_side_length} ${alu_profile_side_length} ${top_protection_bottom-computer_box_height}"/>-->
          <cylinder length="${top_protection_bottom-computer_box_height}" radius="${alu_profile_side_length*0.5*alu_profile_collision_size_factor}"/>
        </geometry>
        <material name="Grey">
          <color rgba="0.5 0.5 0.5 1"/>
        </material> 
      </collision>
      
      <collision>
        <origin xyz="${ (computer_box_length/2-alu_profile_side_length/2)} ${-(computer_box_width/2-alu_profile_side_length/2)} ${computer_box_height/2 + top_protection_bottom/2}" rpy="0 0 0"/>
        <geometry>
          <!--<box size="${alu_profile_side_length} ${alu_profile_side_length} ${top_protection_bottom-computer_box_height}"/>-->
          <cylinder length="${top_protection_bottom-computer_box_height}" radius="${alu_profile_side_length*0.5*alu_profile_collision_size_factor}"/>  
        </geometry>
        <material name="Grey">
          <color rgba="0.5 0.5 0.5 1"/>
        </material> 
      </collision>
      
      <!--Top geom-->      
      <collision>
        <origin xyz="0 ${ (computer_box_width/2-alu_profile_side_length/2)} ${top_protection_bottom + alu_profile_side_length/2}" rpy="0 ${M_PI*0.5} 0"/>
        <geometry>
          <!--<box size="${computer_box_length} ${alu_profile_side_length} ${alu_profile_side_length}"/>-->
          <cylinder length="${computer_box_length}" radius="${alu_profile_side_length*0.5*alu_profile_collision_size_factor}"/>             
        </geometry>
        <material name="Grey">
          <color rgba="0.5 0.5 0.5 1"/>
        </material> 
      </collision>
      
      <collision>
        <origin xyz="0 ${-(computer_box_width/2-alu_profile_side_length/2)} ${top_protection_bottom + alu_profile_side_length/2}" rpy="0 ${M_PI*0.5} 0"/>
        <geometry>
          <!--<box size="${computer_box_length} ${alu_profile_side_length} ${alu_profile_side_length}"/>-->
          <cylinder length="${computer_box_length}" radius="${alu_profile_side_length*0.5*alu_profile_collision_size_factor}"/>
        </geometry>
        <material name="Grey">
          <color rgba="0.5 0.5 0.5 1"/>
        </material> 
      </collision>

      <collision>
        <origin xyz="${ (computer_box_length/2-alu_profile_side_length/2)} 0 ${top_protection_bottom + alu_profile_side_length/2}" rpy="${M_PI*0.5} ${M_PI*0.5} 0"/>
        <geometry>
          <!--<box size="${alu_profile_side_length} ${computer_box_width}  ${alu_profile_side_length}"/>-->
          <cylinder length="${computer_box_width}" radius="${alu_profile_side_length*0.5*alu_profile_collision_size_factor}"/>  
        </geometry>
        <material name="Grey">
          <color rgba="0.5 0.5 0.5 1"/>
        </material> 
      </collision>
      
      <collision>
        <origin xyz="${-(computer_box_length/2-alu_profile_side_length/2)} 0 ${top_protection_bottom + alu_profile_side_length/2}" rpy="${M_PI*0.5} ${M_PI*0.5} 0"/>
        <geometry>
          <!--<box size="${alu_profile_side_length} ${computer_box_width}  ${alu_profile_side_length}"/>-->
          <cylinder length="${computer_box_width}" radius="${alu_profile_side_length*0.5*alu_profile_collision_size_factor}"/>
        </geometry>
        <material name="Grey">
          <color rgba="0.5 0.5 0.5 1"/>
        </material> 
      </collision>    
      
      <!-- 360 cam mount -->      
      <collision>
        <origin xyz="0 0 ${0.5 * (top_protection_bottom + alu_profile_side_length + insta360_mounting_height - insta360_radius)}" rpy="0 0 0"/>
        <geometry>
          <!--<box size="${computer_box_length} ${alu_profile_side_length} ${alu_profile_side_length}"/>-->
          <cylinder length="${insta360_mounting_height - top_protection_bottom - alu_profile_side_length - insta360_radius}" radius="${alu_profile_side_length*0.5*alu_profile_collision_size_factor}"/>
        </geometry>
        <material name="Grey">
          <color rgba="0.5 0.5 0.5 1"/>
        </material> 
      </collision>
      
      <xacro:if value="$(arg add_manipulation_geom)">
        <!-- Lidar protection geom -->
        <collision>
          <origin xyz="0 0 ${computer_box_height + 0.5*(top_protection_bottom - computer_box_height)}" rpy="0 0 0"/>
          <geometry>
            <cylinder length="${top_protection_bottom - computer_box_height}" radius="${computer_box_width / 2.0}"/>
          </geometry>
          <material name="Grey">
            <color rgba="0.5 0.5 0.5 1"/>
          </material> 
        </collision>
      </xacro:if>
      </xacro:unless>
      
      
      <xacro:if value="$(arg add_containment_self_filter_geom)">
      <collision>
        <origin xyz="0 0 ${computer_box_height/2 + top_protection_bottom/2}" rpy="0 0 0"/>
        <geometry>
          <box size="${computer_box_length} ${computer_box_width} ${top_protection_bottom}"/>
        </geometry>
        <material name="Grey">
          <color rgba="0.5 0.5 0.5 1"/>
        </material> 
      </collision>
<!--      <collision>
        <origin xyz="-0.18 0 ${computer_box_height/2+0.07}" rpy="0 0 0"/>
        <geometry>
          <box size="${computer_box_length} ${computer_box_width*1.95} ${0.3}"/>
        </geometry>
        <material name="Grey">
          <color rgba="0.5 0.5 0.5 1"/>
        </material> 
      </collision>-->
      
      </xacro:if>
    </link>
    
    <!-- Chilitags -->
    <xacro:if value="${add_chilitags}">
      <xacro:chilitag_no_geom name="chilitag29" size="${chilitag_size}" parent="${name}_link">
        <origin xyz="${chilitag_29_x} ${chilitag_29_y} ${chilitag_29_z}" rpy="${M_PI} ${0} ${-M_PI/2}"/>
      </xacro:chilitag_no_geom> 
    </xacro:if>
    
    <!-- IMU -->
    <joint name="imu_link_joint" type="fixed">
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <parent link="${name}_link" />
      <child link="${imu_link}"/>      
    </joint>
    
    <link name="${imu_link}">     
    </link>
    
    <!-- Spinning VLP16 -->
    <xacro:spinning_sensor_mount_macro parent="${name}_link"  name="spin_lidar" scaling="0.001">
      <origin xyz="0 0 0.34708" rpy="0.0 0.0 0.0"/>
    </xacro:spinning_sensor_mount_macro>
      
    <!-- 360 camera -->
    <xacro:camera360 name="camera360" right_cam_name="right" left_cam_name="left" parent="${name}_link" collision_radius="${insta360_collision_radius}" dist_between_cameras="-0.03850784" ros_topic="image_raw" update_rate="10" res_x="1504" res_y="1504" image_format="R8G8B8" fov="${M_PI}">
      <origin xyz="0 0 ${insta360_mounting_height}" rpy="0.0 0 0"/> <!-- base_link to camera mount transform -->
      <!-- cam to cam transform (calibration by kalibr) -->
      <!--<origin xyz="0.00009742  0.00061696 -0.03850784" rpy="3.1373499 -0.0021358 -3.1279404"/>--> <!-- insta #1 -->
      <origin xyz="0.002862424041614364  -0.00013127655875068252 -0.03724378451297336" rpy="-3.1402707 0.0036289 -3.1175768"/> <!-- insta #3 -->
    </xacro:camera360>
    
    <!-- Realsense T265 Tracking camera -->
    <xacro:realsense_t265_tracking_camera name="tracking_camera" parent="${name}_link">
      <origin xyz="${computer_box_width/2.0 - realsense_t265_depth/2.0} ${computer_box_width/2.0 - alu_profile_side_length - realsense_t265_width/2.0} ${top_protection_bottom - realsense_t265_height/2.0}" rpy="0 0 0"/>
    </xacro:realsense_t265_tracking_camera>

    <!-- +++++ Cage Realsenses +++++ -->
    <xacro:property name="autonomy_box_realsense_x_offset" value="0.07187"/>
    <xacro:property name="autonomy_box_realsense_y_offset" value="0.03"/>
    <xacro:property name="autonomy_box_realsense_z_offset" value="0.00395"/>
<!--     <xacro:property name="autonomy_box_realsense_z_offset" value="0.46895"/> -->
    <xacro:property name="autonomy_box_realsense_pitch" value="${25*M_PI/180.0}"/>
    
    <!-- Realsense D435 front -->
    <xacro:realsense_d435_camera_with_mount_comprehensive_params name="front_rgbd_cam" parent="${name}_link" image_topic="image_rect_color" depth_points_topic="depth/color/points" min_range="0.3" max_range="9.0" update_rate="20">
      <origin xyz="${autonomy_box_realsense_x_offset} ${-1 * autonomy_box_realsense_y_offset} ${top_protection_bottom + alu_profile_side_length + autonomy_box_realsense_z_offset}" rpy="0.0 ${autonomy_box_realsense_pitch} 0"/>
    </xacro:realsense_d435_camera_with_mount_comprehensive_params>
    
    <!-- Realsense D435 back -->
    <xacro:realsense_d435_camera_with_mount_comprehensive_params name="back_rgbd_cam" parent="${name}_link" image_topic="image_rect_color" depth_points_topic="depth/color/points" min_range="0.3" max_range="9.0" update_rate="20">
      <origin xyz="${-1 * autonomy_box_realsense_x_offset} ${autonomy_box_realsense_y_offset} ${top_protection_bottom + alu_profile_side_length + autonomy_box_realsense_z_offset}" rpy="0.0 ${autonomy_box_realsense_pitch} ${M_PI}"/>
    </xacro:realsense_d435_camera_with_mount_comprehensive_params>
    
    <gazebo reference="${name}_link">
      <visual>
      <material>
        <ambient>0.1 0.1 0.1 1</ambient>
        <diffuse>0.48 0.48 0.48 1</diffuse>
        <emissive>0.237 0.237 0.237 1</emissive>
        <specular>0.8 0.8 0.8 1</specular>
      </material>
    </visual>
    </gazebo>
    
  </xacro:macro>
</robot>
