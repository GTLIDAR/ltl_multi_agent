<launch>
  <!-- Input parameters -->
  <arg name="robot_name" default="a1"/>
  <arg name="world_name" default="mrdc"/>
  <arg name="world_format" default="model"/>
  <arg name="init_x" default="0.0"/>
  <arg name="init_y" default="0.0"/>
  <arg name="init_z" default="0.6"/>
  <arg name="init_yaw" default="0.0"/>
  <arg name="frame_prefix" default=""/>
  <arg name="rviz" default="true"/>

  <arg name="robot_path" value="(find $(arg robot_name)_description)"/>
  <arg name="dollar" default="$"/>

  <!-- Gazebo parameters-->
  <arg name="paused" default="true"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  
  <!-- Debug mode will hung up the robot, use "true" or "false" to switch it. -->
  <arg name="user_debug" default="false"/>
    
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="world_name" value="$(find unitree_navigate)/worlds/$(arg world_name).$(arg world_format)" />
      <!-- arg name="world_name" value="$(find unitree_bringup)/worlds/mrdc_world.model" /-->
      <arg name="debug" value="$(arg debug)"/>
      <arg name="gui" value="$(arg gui)"/>
      <arg name="paused" value="$(arg paused)"/>
      <arg name="use_sim_time" value="$(arg use_sim_time)"/>
      <arg name="headless" value="$(arg headless)"/>
      <arg name="verbose" value="false" />
  </include>

  <!-- Load robot description -->
      
  <!-- Load the XACRO/URDF into the ROS Parameter Server -->
  <param name="robot_description"
         command="$(find xacro)/xacro --inorder '$(arg dollar)$(arg robot_path)/xacro/robot.xacro' 
         DEBUG:=$(arg user_debug)"/>
  <!-- param name="robot_description" command="cat '$(find a1_description)/urdf/a1.urdf'" / -->

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <!-- Set trunk and joint positions at startup -->
  <node pkg="gazebo_ros" type="spawn_model" name="urdf_spawner" respawn="false" output="screen"
        args="-urdf -x $(arg init_x) -y $(arg init_y) -z $(arg init_z) -Y $(arg init_yaw) -model $(arg robot_name)_gazebo -param robot_description -unpause"/>

  <!-- Load joint PID controller configurations from YAML file to parameter server -->
  <rosparam file="$(arg dollar)$(arg robot_path)/config/robot_control.yaml" command="load"/>

  <!-- load the controllers -->
  <node pkg="controller_manager" type="spawner" name="controller_spawner" respawn="false"
        output="screen" ns="/$(arg robot_name)_gazebo" args="joint_state_controller
        FL_hip_controller FL_thigh_controller FL_calf_controller
        FR_hip_controller FR_thigh_controller FR_calf_controller
        RL_hip_controller RL_thigh_controller RL_calf_controller
        RR_hip_controller RR_thigh_controller RR_calf_controller "/>

  <!-- convert joint states to TF transforms for rviz, etc -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher"
        respawn="false" output="screen">
      <remap from="/joint_states" to="/$(arg robot_name)_gazebo/joint_states"/>
  </node>

  <!-- <node pkg="unitree_gazebo" type="servo" name="seturtlebot3_houservo" required="true" output="screen"/> -->

  <!-- load the parameter unitree_controller -->
  <include file="$(find unitree_controller)/launch/set_ctrl.launch">
      <arg name="robot_name" value="$(arg robot_name)"/>
  </include>
</launch>
