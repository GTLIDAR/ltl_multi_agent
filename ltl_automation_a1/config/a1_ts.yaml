# TS definitions are to be interpreted by the agent node. The LTL core planner only uses the node names, connections, weights, and action names to build its automaton.
#
# Possible TS types:
#   3d_pose_region (3D pose [[x,y,z], [x,y,z,w]] with quaternion orientation)
#   2d_pose_region (2D pose [[x,y], phi] with euler angle orientation)
#   3d_point_region (3D point [x, y, z] without orientation)
#   2d_point_region (2D point [x, y] without orientation)
#   nexus_load

state_dim: ["2d_pose_region"]
state_models:
    2d_pose_region:
        ts_type: "2d_pose_region"
        initial: "r2"
        nodes: 
            r1:
                attr:
                    type: "square"
                    pose: [[0,0], [0]]
                    length: 2
                    hysteresis: 0.05
                connected_to:
                    r1: "goto_r1" 
                    r2: "goto_r2"
                    r3: "goto_r3"
            r2:
                attr:
                    type: "square"
                    pose: [[0,5], [0]]
                    length: 2
                    hysteresis: 0.05
                connected_to:
                    r1: "goto_r1"
                    r2: "goto_r2"
                    r4: "goto_r4"
                    r5: "goto_r5"
            r3:
                attr:
                    type: "square"
                    pose: [[0,11], [0]]
                    length: 2
                    hysteresis: 0.05
                connected_to:
                    r1: "goto_r1"
                    r3: "goto_r3"
                    r4: "goto_r4"
            r4:
                attr:
                    type: "square"
                    pose: [[-9,0], [0]]
                    length: 2
                    hysteresis: 0.05
                connected_to:
                    r2: "goto_r2"
                    r3: "goto_r3"
                    r4: "goto_r4"
                    r6: "goto_r6"
            r5:
                attr:
                    type: "square"
                    pose: [[-9,5], [0]]
                    length: 1.5
                    hysteresis: 0.05
                connected_to:
                    r2: "goto_r2"
                    r5: "goto_r5"
            r6:
                attr:
                    type: "square"
                    pose: [[-9,11], [0]]
                    length: 1.5
                    hysteresis: 0.05
                connected_to:
                    r4: "goto_r4"
                    r6: "goto_r6"
#    a1_load:
#        ts_type: "a1_load"
#        initial: "unloaded"
#        nodes:
#            unloaded:
#                connected_to:
#                    loaded_box: "pick_box"
#            loaded_box:
#                connected_to:
#                    loaded_assembly: "pick_assembly"
#            loaded_assembly:
#                connected_to:
#                    unloaded: "deliver_assembly"

actions:
    goto_r1:
        type: "move"
        weight: 10
        guard: "1"
        attr:
            region: r1
            pose: [[0,0,0], [0,0,0,1]]
    goto_r2:
        type: "move"
        weight: 10
        guard: "1"
        attr:
            region: r2
            pose: [[0,5,0], [0,0,0,1]]
    goto_r3:
        type: "move"
        weight: 10
        guard: "1"
        attr:
            region: r3
            pose: [[0,11,0], [0,0,0,1]]
    goto_r4:
        type: "move"
        weight: 10
        guard: "1"
        attr:
            region: r4
            pose: [[-9,0,0], [0,0,0,1]]
    goto_r5:
        type: "move"
        weight: 10
        guard: "1"
        attr:
            region: r5
            pose: [[-9,5,0], [0,0,0,1]]
    goto_r6:
        type: "move"
        weight: 10
        guard: "1"
        attr:
            region: r5
            pose: [[-9,11,0], [0,0,0,1]]
#    pick_box:
#        type: "pick_box"
#        weight: 10
#        guard: "r5"
#    pick_assembly:
#        type: "pick_assembly"
#        weight: 10
#        guard: "r6"
#    deliver_assembly:
#        type: "deliver_assembly"
#        weight: 10
#        guard: "r1"
             

